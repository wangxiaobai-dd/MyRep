// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: selfMessage.proto

#include "selfMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fdescriptor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto;
namespace test {
class SelfDescribingMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SelfDescribingMessage> _instance;
} _SelfDescribingMessage_default_instance_;
}  // namespace test
static void InitDefaultsscc_info_SelfDescribingMessage_selfMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::test::_SelfDescribingMessage_default_instance_;
    new (ptr) ::test::SelfDescribingMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::test::SelfDescribingMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SelfDescribingMessage_selfMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SelfDescribingMessage_selfMessage_2eproto}, {
      &scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_selfMessage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_selfMessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_selfMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_selfMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::test::SelfDescribingMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::test::SelfDescribingMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::test::SelfDescribingMessage, descriptor_set_),
  PROTOBUF_FIELD_OFFSET(::test::SelfDescribingMessage, message_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::test::SelfDescribingMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::test::_SelfDescribingMessage_default_instance_),
};

const char descriptor_table_protodef_selfMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021selfMessage.proto\022\004test\032\031google/protob"
  "uf/any.proto\032 google/protobuf/descriptor"
  ".proto\"z\n\025SelfDescribingMessage\022:\n\016descr"
  "iptor_set\030\001 \001(\0132\".google.protobuf.FileDe"
  "scriptorSet\022%\n\007message\030\002 \001(\0132\024.google.pr"
  "otobuf.Any"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_selfMessage_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_selfMessage_2eproto_sccs[1] = {
  &scc_info_SelfDescribingMessage_selfMessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_selfMessage_2eproto_once;
static bool descriptor_table_selfMessage_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_selfMessage_2eproto = {
  &descriptor_table_selfMessage_2eproto_initialized, descriptor_table_protodef_selfMessage_2eproto, "selfMessage.proto", 210,
  &descriptor_table_selfMessage_2eproto_once, descriptor_table_selfMessage_2eproto_sccs, descriptor_table_selfMessage_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_selfMessage_2eproto::offsets,
  file_level_metadata_selfMessage_2eproto, 1, file_level_enum_descriptors_selfMessage_2eproto, file_level_service_descriptors_selfMessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_selfMessage_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_selfMessage_2eproto), true);
namespace test {

// ===================================================================

void SelfDescribingMessage::InitAsDefaultInstance() {
  ::test::_SelfDescribingMessage_default_instance_._instance.get_mutable()->descriptor_set_ = const_cast< PROTOBUF_NAMESPACE_ID::FileDescriptorSet*>(
      PROTOBUF_NAMESPACE_ID::FileDescriptorSet::internal_default_instance());
  ::test::_SelfDescribingMessage_default_instance_._instance.get_mutable()->message_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class SelfDescribingMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<SelfDescribingMessage>()._has_bits_);
  static const PROTOBUF_NAMESPACE_ID::FileDescriptorSet& descriptor_set(const SelfDescribingMessage* msg);
  static void set_has_descriptor_set(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const PROTOBUF_NAMESPACE_ID::Any& message(const SelfDescribingMessage* msg);
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const PROTOBUF_NAMESPACE_ID::FileDescriptorSet&
SelfDescribingMessage::_Internal::descriptor_set(const SelfDescribingMessage* msg) {
  return *msg->descriptor_set_;
}
const PROTOBUF_NAMESPACE_ID::Any&
SelfDescribingMessage::_Internal::message(const SelfDescribingMessage* msg) {
  return *msg->message_;
}
void SelfDescribingMessage::clear_descriptor_set() {
  if (descriptor_set_ != nullptr) descriptor_set_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void SelfDescribingMessage::clear_message() {
  if (message_ != nullptr) message_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
SelfDescribingMessage::SelfDescribingMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:test.SelfDescribingMessage)
}
SelfDescribingMessage::SelfDescribingMessage(const SelfDescribingMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_descriptor_set()) {
    descriptor_set_ = new PROTOBUF_NAMESPACE_ID::FileDescriptorSet(*from.descriptor_set_);
  } else {
    descriptor_set_ = nullptr;
  }
  if (from._internal_has_message()) {
    message_ = new PROTOBUF_NAMESPACE_ID::Any(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:test.SelfDescribingMessage)
}

void SelfDescribingMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SelfDescribingMessage_selfMessage_2eproto.base);
  ::memset(&descriptor_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_) -
      reinterpret_cast<char*>(&descriptor_set_)) + sizeof(message_));
}

SelfDescribingMessage::~SelfDescribingMessage() {
  // @@protoc_insertion_point(destructor:test.SelfDescribingMessage)
  SharedDtor();
}

void SelfDescribingMessage::SharedDtor() {
  if (this != internal_default_instance()) delete descriptor_set_;
  if (this != internal_default_instance()) delete message_;
}

void SelfDescribingMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelfDescribingMessage& SelfDescribingMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SelfDescribingMessage_selfMessage_2eproto.base);
  return *internal_default_instance();
}


void SelfDescribingMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:test.SelfDescribingMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(descriptor_set_ != nullptr);
      descriptor_set_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(message_ != nullptr);
      message_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SelfDescribingMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .google.protobuf.FileDescriptorSet descriptor_set = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_descriptor_set(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .google.protobuf.Any message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SelfDescribingMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.SelfDescribingMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .google.protobuf.FileDescriptorSet descriptor_set = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::descriptor_set(this), target, stream);
  }

  // optional .google.protobuf.Any message = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.SelfDescribingMessage)
  return target;
}

size_t SelfDescribingMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.SelfDescribingMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .google.protobuf.FileDescriptorSet descriptor_set = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *descriptor_set_);
    }

    // optional .google.protobuf.Any message = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelfDescribingMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test.SelfDescribingMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SelfDescribingMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SelfDescribingMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test.SelfDescribingMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test.SelfDescribingMessage)
    MergeFrom(*source);
  }
}

void SelfDescribingMessage::MergeFrom(const SelfDescribingMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test.SelfDescribingMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_descriptor_set()->PROTOBUF_NAMESPACE_ID::FileDescriptorSet::MergeFrom(from._internal_descriptor_set());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_message()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_message());
    }
  }
}

void SelfDescribingMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test.SelfDescribingMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelfDescribingMessage::CopyFrom(const SelfDescribingMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.SelfDescribingMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelfDescribingMessage::IsInitialized() const {
  if (_internal_has_descriptor_set()) {
    if (!descriptor_set_->IsInitialized()) return false;
  }
  return true;
}

void SelfDescribingMessage::InternalSwap(SelfDescribingMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(descriptor_set_, other->descriptor_set_);
  swap(message_, other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SelfDescribingMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace test
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::test::SelfDescribingMessage* Arena::CreateMaybeMessage< ::test::SelfDescribingMessage >(Arena* arena) {
  return Arena::CreateInternal< ::test::SelfDescribingMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
